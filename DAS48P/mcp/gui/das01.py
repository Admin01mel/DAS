# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'das01.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from pathlib import Path
from PyQt5 import QtCore, QtGui, QtWidgets
import time
import db as db
btn=[0]*48
btn_lbl=[0]*48
from functools import partial
import qtawesome as qta
from PyQt5.QtWidgets import *
from PyQt5.QtCore import Qt
import deviceConfig
import log
import passWindow
import os
import sip
os.environ['DISPLAY'] = ":0"
import channel
flagTime=0
flagAnim=0  
ack=0
os.environ["QT_IM_MODULE"] = "qtvirtualkeyboard"
import socket
import socket
import netifaces as ni
import struct
import textwrap
import gc
mute_icon=None
up_icon =None


# def get_ip_address(ifname):
#     s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
#     return socket.inet_ntoa(fcntl.ioctl(
#         s.fileno(),
#         0x8915,  # SIOCGIFADDR
#         struct.pack('256s', ifname[:15])
#     )[20:24])

# get_ip_address('eth0')  # '192.168.0.110'

def handleVisibleChanged():
    if not QtGui.QGuiApplication.inputMethod().isVisible():
        return
    for w in QtGui.QGuiApplication.allWindows():
        if w.metaObject().className() == "QtVirtualKeyboard::InputView":
            keyboard = w.findChild(QtCore.QObject, "keyboard")
            if keyboard is not None:
                r = w.geometry()
                r.moveTop(keyboard.property("y"))
                w.setMask(QtGui.QRegion(r))
               
                return
class Ui_MainWindow(object):
    windows=None
    a=0
    
    def getIP(self):
        _translate = QtCore.QCoreApplication.translate
        try:
            ip = ni.ifaddresses('eth0')[ni.AF_INET][0]['addr']
          
            self.lb_lan.setText(_translate("MainWindow", ip))
            print(ip)  # should print "192.168.100.37"
        except : 
            print("Ip Notfound")
        time.sleep(0.1)
        try:
            wf =  ni.ifaddresses('wlan0')[ni.AF_INET][0]['addr']
            self.lb_wifi.setText(_translate("MainWindow", wf))
        except:
            #  print("wifi not found")
            print("IP")
    def ack(self):
        global ack
        ack =1
        db.updDb.updData(1,"m_mesin","ack",1,"id",1)
    def mute(self):
        db.updDb.updData(1,"m_mesin","mute",1,"id",1)
    def reset(self):
        global ack
        ack=0
        db.updDb.rstMesin(1)
    def closewindows(self):
        print("close")
        self.window.close()
    def openHome(self):
        self.getIP()
        print("home")
    def openConfig(self):
        global flagTime
        flagTime =2
        self.window = QtWidgets.QMainWindow()
        self.ui = passWindow.Ui_PassWindow()
        self.ui.setupUi(self.window)
        passWindow.Ui_PassWindow.windows=self.window
        #self.timer.stop()
        passWindow.Ui_PassWindow.tim=self.timer
        passWindow.Ui_PassWindow.windows2=self.windows
        self.window.show()
    def openLog(self):
        global btn
        self.window = QtWidgets.QMainWindow()
        self.ui = log.Ui_LogWindow()
        self.ui.setupUi(self.window)
        log.Ui_LogWindow.windows=self.window
        log.Ui_LogWindow.windows.setAttribute(QtCore.Qt.WA_DeleteOnClose) 
        self.window.show()
        self.timer.stop()
        self.windows.destroy()

         # self.pb_reset.deleteLater() 
        # self.pb_config.deleteLater() 
        # self.pb_log.deleteLater() 
        # self.label.deleteLater() 

        

   

    def setupfooter(self,mainWindow):
        global mute_icon,up_icon
        max_x=mainWindow.width()
        max_y=mainWindow.height()
        widt_x=max_x/6
        height_y=max_y/10
        home_icon = qta.icon('fa5s.home', color='green', options=[{'scale_factor': 0.8}])
        self.pb_home = QtWidgets.QPushButton(self.centralwidget)
        self.pb_home.setIcon(home_icon)
        self.pb_home.setIconSize(QtCore.QSize(widt_x/4, widt_x/4))
        self.pb_home.setGeometry(QtCore.QRect(widt_x*0, max_y-120, widt_x, 100))
        self.pb_home.setObjectName("home")
        self.pb_home.clicked.connect(self.openHome)
        self.pb_home.setAttribute(QtCore.Qt.WA_DeleteOnClose) 

        mute_icon = qta.icon('fa5s.volume-mute', color='red', options=[{'scale_factor': 0.8}])
        up_icon = qta.icon('fa5s.volume-mute', color='red', options=[{'scale_factor': 0.8}])
        self.pb_mute = QtWidgets.QPushButton(self.centralwidget)
        self.pb_mute.setIcon(mute_icon)
        self.pb_mute.setIconSize(QtCore.QSize(widt_x/4, widt_x/4))
        self.pb_mute.setGeometry(QtCore.QRect(widt_x, max_y-120, widt_x, 100))
        self.pb_mute.setObjectName("mute")
        self.pb_mute.clicked.connect(self.mute)
        self.pb_mute.setAttribute(QtCore.Qt.WA_DeleteOnClose) 
        

        ack_icon = qta.icon('fa5s.square', color='yellow', options=[{'scale_factor': 0.8}])
        self.pb_ack = QtWidgets.QPushButton(self.centralwidget)
        self.pb_ack.setIcon(ack_icon)
        self.pb_ack.setIconSize(QtCore.QSize(widt_x/4, widt_x/4))
        self.pb_ack.setGeometry(QtCore.QRect(widt_x*2, max_y-120, widt_x, 100))
        self.pb_ack.setObjectName("ack")
        self.pb_ack.clicked.connect(self.ack)
        self.pb_ack.setAttribute(QtCore.Qt.WA_DeleteOnClose) 

        reset_icon = qta.icon('fa5s.sync', color='gray', options=[{'scale_factor': 0.8}])
        self.pb_reset = QtWidgets.QPushButton(self.centralwidget)
        self.pb_reset.setIcon(reset_icon)
        self.pb_reset.setIconSize(QtCore.QSize(widt_x/4, widt_x/4))
        self.pb_reset.setGeometry(QtCore.QRect(widt_x*3, max_y-120, widt_x, 100))
        self.pb_reset.setObjectName("reset")
        self.pb_reset.clicked.connect(self.reset)
        self.pb_reset.setAttribute(QtCore.Qt.WA_DeleteOnClose) 
        
        config_icon = qta.icon('fa5s.tools', color='gray', options=[{'scale_factor': 0.8}])
        self.pb_config = QtWidgets.QPushButton(self.centralwidget)
        self.pb_config.setIcon(config_icon)
        self.pb_config.setIconSize(QtCore.QSize(widt_x/4, widt_x/4))
        self.pb_config.setGeometry(QtCore.QRect(widt_x*4, max_y-120, widt_x, 100))
        self.pb_config.clicked.connect(self.openConfig)
        self.pb_config.setObjectName("config")
        self.pb_config.setAttribute(QtCore.Qt.WA_DeleteOnClose) 

        log_icon = qta.icon('fa5s.book', color='gray', options=[{'scale_factor': 0.8}])
        self.pb_log = QtWidgets.QPushButton(self.centralwidget)
        self.pb_log.setIcon(log_icon)
        self.pb_log.setIconSize(QtCore.QSize(widt_x/4, widt_x/4))
        self.pb_log.setGeometry(QtCore.QRect(widt_x*5, max_y-120, widt_x, 100))
        self.pb_log.setObjectName("log") 
        self.pb_log.clicked.connect(self.openLog)

        self.label = QtWidgets.QLabel(self.pb_home)
        self.label.setGeometry(QtCore.QRect(widt_x/2-23,35, widt_x, 100))
        self.label.setText("HOME")
        self.label.setObjectName("label_Home")
        self.label.setStyleSheet("color:green;font-size:15px") 
        self.label.setAttribute(QtCore.Qt.WA_DeleteOnClose) 
        

        self.label = QtWidgets.QLabel(self.pb_mute)
        self.label.setGeometry(QtCore.QRect(widt_x/2-23,35, widt_x, 100))
        self.label.setText("MUTE")
        self.label.setObjectName("label_Mute")
        self.label.setStyleSheet("color:red;font-size:15px") 

        self.label = QtWidgets.QLabel(self.pb_ack)
        self.label.setGeometry(QtCore.QRect(widt_x/2-18,35, widt_x, 100))
        self.label.setText("ACK")
        self.label.setObjectName("label_ACK")
        self.label.setStyleSheet("color:yellow;font-size:15px") 

        self.label = QtWidgets.QLabel(self.pb_reset)
        self.label.setGeometry(QtCore.QRect(widt_x/2-23,35, widt_x, 100))
        self.label.setText("RESET")
        self.label.setObjectName("label_rst")
        self.label.setStyleSheet("color:gray;font-size:15px") 
   
        self.label = QtWidgets.QLabel(self.pb_config)
        self.label.setGeometry(QtCore.QRect(widt_x/2-30,35, widt_x, 100))
        self.label.setText("CONFIG")
        self.label.setObjectName("label_cfg")
        self.label.setStyleSheet("color:gray;font-size:15px") 

        self.label = QtWidgets.QLabel(self.pb_log)
        self.label.setGeometry(QtCore.QRect(widt_x/2-18,35, widt_x, 100))
        self.label.setText("LOGS")
        self.label.setObjectName("label_log_cuy")
        self.label.setStyleSheet("color:gray;font-size:15px") 


    def setupUi(self, MainWindow):
        global btn
        global btn_lbl
        MainWindow.setObjectName("MainWindow")
       
        MainWindow.resize(1280, 800)
        MainWindow.setWindowFlags( Qt.FramelessWindowHint)
        MainWindow.showFullScreen()
        MainWindow.setAttribute(QtCore.Qt.WA_DeleteOnClose) 
        #screen = app.primaryScreen()
       
        #size = screen.size()
        sizeObject = QtWidgets.QDesktopWidget().screenGeometry(-1)
       
        channel =db.readDb.readChannel(1)
        w=float(channel[0]["zoom_w"])
        print(type(w))
        max_x=MainWindow.width()
        max_y=MainWindow.height()
        widt_x=w*max_x/6
        height_y=max_y/10
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        x=0
        y=25
       
        row= 1
        if(int(channel[0]["displayed_port"])<=len(channel)):
            row =int(channel[0]["displayed_port"])
        else:
            row=len(channel)
        if(row>48):
            row=48
        #print(widt_x)
        for i in range (row) :
            btn[i] = QtWidgets.QPushButton(self.centralwidget)
            btn[i].setGeometry(QtCore.QRect(x, y, widt_x, height_y))
            btn[i].classes ="channel"
            btn[i].setStyleSheet("background-color : green;font-size : "+str(channel[i]["f_size"])+"px")       
            x+=widt_x
            if(x>=max_x):
                x=0
                y+=height_y
            btn[i].setObjectName("channel")
            nama_alat=channel[i]["nama_alat"]
            nama_alat_wrap = '\n'.join(['\n'.join(textwrap.wrap(line, 17,
                 break_long_words=True, replace_whitespace=False))
                 for line in nama_alat.splitlines() if line.strip() != ''])
            no=0
            print(nama_alat_wrap)
            btn[i].clicked.connect(partial(self.btn_clicked,channel[i]["port"]))
            btn_lbl[i] = QtWidgets.QLabel(btn[i])
            btn_lbl[i].setGeometry(QtCore.QRect(15, 5, widt_x-20, height_y-20))
            btn_lbl[i].setAlignment(Qt.AlignCenter)
            btn_lbl[i].setObjectName("text_channel")
            btn_lbl[i].setText(nama_alat_wrap)
            
           
        
        self.setupfooter(MainWindow)
        self.lb_wifi = QtWidgets.QLabel(self.centralwidget)
        self.lb_wifi.setGeometry(QtCore.QRect( max_x-130, 5, 100, 16))
        self.lb_wifi.setObjectName("lb_wifi")
        self.pb_wifi = QtWidgets.QPushButton(self.centralwidget)
        self.pb_wifi.setGeometry(QtCore.QRect(max_x-150, 0, 21, 23))
        self.pb_wifi.setText("")
        self.pb_wifi.setObjectName("pb_wifi")
        wifi_icon = qta.icon('fa5s.wifi', color='white', options=[{'scale_factor': 0.7}])
        self.pb_wifi.setIcon(wifi_icon)

        self.pb_lan = QtWidgets.QPushButton(self.centralwidget)
        self.pb_lan.setGeometry(QtCore.QRect( max_x-280, 0, 21, 23))
        self.pb_lan.setText("")
        self.pb_lan.setObjectName("pb_lan")
        lan_icon = qta.icon('fa5s.network-wired', color='white', options=[{'scale_factor': 0.7}])
        self.pb_lan.setIcon(lan_icon)
        self.lb_lan = QtWidgets.QLabel(self.centralwidget)
        self.lb_lan.setGeometry(QtCore.QRect(max_x-260, 5, 91, 16))
        self.lb_lan.setObjectName("lb_lan")
      
        self.pb_wifi.setIcon(wifi_icon)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(MainWindow)
        self.getIP()
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.timer = QtCore.QTimer()
        self.timer.timeout.connect(self.timout)   
        self.timer.start(1000)
       
                
       
    def btn_clicked(self,action):
        
        channel.Ui_ChannelWindow.port=action 
        self.window = QtWidgets.QMainWindow()
        self.ui = channel.Ui_ChannelWindow()
        self.ui.setupUi(self.window)
        print(action)
        channel.Ui_ChannelWindow.windows=self.window
        self.timer.stop()
        self.windows.destroy()
        self.window.show()

    def timout(self):
        global flagTime
        global flagAnim
        global ack
        global btn
        global btn_lbl
        global mute_icon
        global up_icon
       
        
        #self.a+=1
       # print(flagAnim)
        kondisi = db.readDb.readChannel(1)
        row =int(kondisi[0]["displayed_port"])
        
        mute =int(kondisi[0]["mute"])
        cfg = int(kondisi[0]["cfg"])
        #if (mute==1):
           # self.pb_mute.setStyleSheet("background-color : red; ")        
       #     self.pb_mute.setIcon(mute_icon)
      #     print("mute")
      #  elif (mute==0):
           #  self.pb_mute.setStyleSheet("background-color : gray; ")    
        #    self.pb_mute.setIcon(up_icon)
        #   print("up")
        #print(mute)
        if(row>48):
            row=48

        if (cfg==1):
            print("ubah")
            for i in range (row):
                nama_alat=kondisi[i]["nama_alat"]
                nama_alat_wrap = '\n'.join(['\n'.join(textwrap.wrap(line, 17,
                    break_long_words=True, replace_whitespace=False))
                    for line in nama_alat.splitlines() if line.strip() != ''])
                btn_lbl[i].setText(nama_alat_wrap)

        for i in range (row):
            flag_kondisi=kondisi[i]["flag_kondisi"]
            if(flag_kondisi==0):
                btn[i].setStyleSheet("background-color : green; font-size : "+str(kondisi[i]["f_size"])+"px;" )                
            else:
                if(flagAnim ==0 ):
                    btn[i].setStyleSheet("background-color : red;font-size : "+str(kondisi[i]["f_size"])+"px;") 
                elif(flagAnim ==1 and ack ==0):
                    btn[i].setStyleSheet("background-color :  #3c1111;font-size : "+str(kondisi[i]["f_size"])+"px;") 
        if(flagAnim ==0):            
            flagAnim =1
        elif(flagAnim ==1):
            
            flagAnim =0 
                    
                #print(1)
        kondisi =None
        mute=None
        time.sleep(0.1)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.lb_wifi.setText(_translate("MainWindow", ""))
        self.lb_lan.setText(_translate("MainWindow", ""))

############################################Sub WIndow ##################################


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    
    app.setStyle(QStyleFactory.create('Cleanlooks'))
    app.quitOnLastWindowClosed = True
    #app.setStyleSheet(Path('window/style.qss').read_text())
    QtGui.QGuiApplication.inputMethod().visibleChanged.connect(handleVisibleChanged)

    app.setStyleSheet(Path('/home/pi/mcp/gui/style.qss').read_text())
    

    Ui_MainWindow.windows = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(Ui_MainWindow.windows)
    Ui_MainWindow.windows.show()
    sys.exit(app.exec_())
